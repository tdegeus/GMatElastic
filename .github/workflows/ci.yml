name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - main

jobs:

  standard:

    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - runs-on: ubuntu-latest
          config: -DCMAKE_BUILD_TYPE=Release -DBUILD_ALL=1
          prop: tests, examples & docs
        - runs-on: macos-latest
          config: -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=1
          prop: tests
        - runs-on: windows-latest
          config: -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=1 -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          prop: tests

    defaults:
      run:
        shell: bash -l {0}

    name: ${{ matrix.runs-on }} â€¢ x64 ${{ matrix.args }}
    runs-on: ${{ matrix.runs-on }}

    steps:

    - name: Basic GitHub action setup
      uses: actions/checkout@v2

    - name: Set conda environment
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-file: environment.yaml
        environment-name: myenv

    - name: Set dummy version
      run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=0.0" >> $GITHUB_ENV

    - name: Configure using CMake
      run: cmake -Bbuild ${{ matrix.config }}

    - name: Build C++ ${{ matrix.prop }}
      working-directory: build
      run: cmake --build .

    - name: Build doxygen-docs (error on warning)
      if: runner.os == 'Linux'
      working-directory: build
      run: make html

    - name: Run C++ ${{ matrix.prop }}
      working-directory: build
      run: ctest --output-on-failure

    - name: Build and install Python module
      run: python setup.py install --build-type Release -vv

    - name: Run Python tests
      working-directory: tests
      run: python Cartesian3d.py

    - name: Generate consistency data based on current commit
      if: runner.os == 'Linux'
      working-directory: tests/compare_versions
      run: |
        python Cartesian3d_generate.py
        python Cartesian3d_check_main.py

    - name: Check consistency with v0.1.0
      if: runner.os == 'Linux'
      working-directory: tests/compare_versions
      run: |
        micromamba install -c conda-forge python=3.8.5 python-gmatelastic=0.1.0
        python Cartesian3d_check_v0.1.0.py
